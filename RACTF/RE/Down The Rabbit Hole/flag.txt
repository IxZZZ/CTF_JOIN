unk_ABCDF5D22

i}xS|3~^YD5Ë²>


cbbefea802bf596615e073d3419262f0


7ca03529d17948c9857bd47dd94e0ee2



3 4 5 6 7 8 9 A
loc_ABCDF5CD3
rarctf{D1d-y0u-t4k3-th3-r3d-p1ll-0r-m4yb3-th3-blu3-p177-539c8a}



e890bdb4fe7f...7f


0x00007FFEB4BD93C0 -> store input 'cat flag2.txt'


rdi 5
rsi 
rdx 0x400

r10
r8
r9



_int64 __fastcall sub_ABCDF5E51(__int64 a1, unsigned int a2, __int64 a3, _QWORD *a4, _QWORD *a5, _QWORD *a6)
{
  __int64 v7; // rdx
  __int64 v11; // [rsp+18h] [rbp-38h]
  __int64 v12; // [rsp+30h] [rbp-20h]
  __int64 v13; // [rsp+38h] [rbp-18h]
  int j; // [rsp+4Ch] [rbp-4h]
  int i; // [rsp+4Ch] [rbp-4h]

  v11 = a3;
  if ( (a3 & 0xF) != 0 )
    return 4294967262LL;
  if ( a2 )
  {
    while ( v11 )
    {
      for ( i = 0; i <= 15; ++i )
        *((_BYTE *)a6 + i) = *((_BYTE *)a5 + i) ^ *((_BYTE *)a4 + i);
      ((void (__fastcall *)(__int64, _QWORD, _QWORD *, _QWORD *))unk_ABCDF5E02)(a1, a2, a6, a6);
      v7 = a6[1];
      *a4 = *a6;
      a4[1] = v7;
      a5 += 2;
      a6 += 2;
      v11 -= 16LL;
    }
  }
  else
  {
    while ( v11 )
    {
      v12 = *a5;
      v13 = a5[1];
      ((void (__fastcall *)(__int64, _QWORD, _QWORD *, _QWORD *))unk_ABCDF5E02)(a1, 0LL, a5, a6);
      for ( j = 0; j <= 15; ++j )
        *((_BYTE *)a6 + j) ^= *((_BYTE *)a4 + j);
      *a4 = v12;
      a4[1] = v13;
      a5 += 2;
      a6 += 2;
      v11 -= 16LL;
    }
  }
  return 0LL;
}