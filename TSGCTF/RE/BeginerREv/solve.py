def sub_func(v4_pos):
    v5 = v4_pos
    v6 = 1
    while ((0xB7747D8F * v5 + 0x488B8271) & 0xffffffff > 0xB2927C):
        v6 += 1
        v5 += v4_pos
        if (v6 == 0x16F):
            v6 = -1
            break
    return v6


def func(character, postion):
    key = [158, 165, 67, 60, 61, 229, 80, 149, 41, 251, 3, 52, 246, 109, 247, 154, 94, 138, 111, 15, 174, 106, 120, 65, 2, 70, 139, 174, 182, 131, 9, 79, 84, 116, 141, 244, 121, 210, 254, 45, 120, 27, 17, 87, 183, 159, 78, 196, 82, 158, 245, 255, 86, 113, 60, 27, 96, 34, 156, 86, 167, 207, 142, 69, 22, 92, 165, 244, 40, 160, 48, 87, 165, 177, 201, 196, 134, 62, 184, 19,
           68, 77, 191, 151, 228, 6, 150, 7, 139, 159, 82, 18, 146, 198, 192, 138, 105, 245, 165, 157, 243, 59, 182, 153, 134, 217, 103, 50, 177, 191, 184, 46, 88, 85, 176, 156, 101, 158, 159, 227, 240, 191, 207, 205, 222, 253, 52, 49, 120, 85, 110, 1, 116, 215, 168, 38, 255, 214, 204, 153, 81, 251, 246, 244, 3, 250, 97, 223, 65, 152, 13, 189, 191, 136, 68, 94, 86, 210, 169]
    v4 = key[postion:]

    v6 = sub_func(v4[2])

    v7 = v4[4]
    v8 = v4[3] * ((character + v4[0]) % 367 * v4[1] % 367 * v6 % 367) % 367

    v9 = sub_func(v4[4])

    v12 = (((v9 * v8 % 367 + 367 - v4[5]) %
           367 + 367 - v4[6]) % 367 + 0x5f) % 367
    v11 = sub_func(v4[7])

    v13 = v4[9] * ((v4[8] + v11 * v12 % 367) % 367)
    v16 = v13 % 367
    v15 = sub_func(v4[10])

    v17 = v15 * v16
    v19 = sub_func(v4[11])

    v21 = (v4[16] + (v4[15] + v4[14] * (((v4[12] + v17 % 367 * v19 %
           367) % 367 + 367 - v4[13]) % 367) % 367) % 367) % 367
    v22 = sub_func(v4[17])

    v24 = (v4[19] + v4[18] * (v21 * v22 % 367) % 367) % 367
    v25 = sub_func(v4[20])

    v26 = v4[28] + v4[27] * (((v4[25] + (v4[24] + v4[22] * ((v24 * v25 % 367 + 367 - v4[21]) %
                             367) % 367 * v4[23] % 367) % 367) % 367 + 367 - v4[26]) % 367) % 367

    v29 = 0x5f + v26 % 367 * v4[29] % 367 - 367 * \
        ((v26 % 367 * v4[29] % 367 + 0x5f) // 367)

    v28 = sub_func(v4[30])

    v30 = (v29 * v28 % 367 + 367 - v4[31]) % 367 + 367 - v4[32]
    v32 = sub_func(v4[33])

    v34 = v4[35] * ((v4[34] + v30 % 367 * v32 % 367) %
                    367) % 367 * v4[36] % 367
    v35 = sub_func(v4[37])

    v37 = (v4[43] * (((((v4[38] * (v34 * v35 % 0x16F) % 367 + 367 - v4[39]) % 367 + 367 - v4[40]) %
           367 + 367 - v4[41]) % 367 + 367 - v4[42]) % 0x16F) % 0x16F + v4[44]) % 0x16F
    v38 = sub_func(v4[45])

    v39 = v4[47]
    v40 = (v4[46] + (int)(v37 * v38) % 367) % 367
    v41 = sub_func(v4[47])

    v43 = (v4[49] + (v4[48] + v40 * v41 % 367) % 367) % 367
    v44 = sub_func(v4[50])

    v46 = v4[55] * ((v4[54] + ((v4[52] + (v4[51] + v43 * v44 % 367) %
                    367) % 367 + 367 - v4[53]) % 367) % 367) % 367
    v47 = sub_func(v4[56])

    v49 = (v46 * v47 % 367 + 367 - v4[57]) % 367
    v50 = sub_func(v4[58])

    v52 = ((0x5f + v49 * v50 % 367) % 367 + v4[59]) % 367
    v53 = sub_func(v4[60])

    v54 = (v4[63] + v4[62] * ((v4[61] + v52 * v53 % 367) % 367) %
           367) % 367 * v4[64] % 367 + 367 - v4[65]

    v56 = sub_func(v4[67])

    v57 = v56 * ((v4[66] + v54 % 367) % 367)
    v59 = sub_func(v4[68])

    v61 = (v4[69] * (v57 % 367 * v59 % 367) % 367 + 367 - v4[70]) % 367
    v62 = sub_func(v4[71])

    v64 = (v4[73] * (v4[72] * (v61 * v62 % 367) % 367) %
           367 + 367 - v4[74]) % 367
    v65 = sub_func(v4[75])

    v67 = (v64 * v65 % 367 + 367 - v4[76]) % 367
    v68 = sub_func(v4[77])

    v70 = ((v4[79] + (v67 * v68 % 367 + 367 - v4[78]) % 367) %
           367 + 367 - v4[80]) % 367
    v71 = sub_func(v4[81])

    v73 = v4[85] * (((v4[82] * (v70 * v71 % 367) %
                    367 + 367 - v4[83]) % 367 + 367 - v4[84]) % 367) % 367
    v74 = sub_func(v4[86])

    v76 = (v73 * v74 % 367 + 367 - v4[87]) % 367
    v77 = sub_func(v4[88])

    v78 = v4[90] * (((0x5f + v76 * v77 % 367) % 367 + 367 - v4[89]) % 367)
    v79 = sub_func(v4[98])

    v82 = sub_func(v4[99])

    v84 = ((v82 * ((v79 * (((((((v78 % 367 + 367 - v4[91]) % 367 * v4[92] % 367 + 367 - v4[93]) % 367 + 367 - v4[94]) % 367 + 367 - v4[95]) % 367 + 367 - v4[96]) % 0x16F + v4[97])
                           % 0x16F)) % 367) % 367 + 367 - v4[100]) % 367 + 367 - v4[101]) % 367 + 367 - v4[102]

    v86 = 0x5f + ((((v84 % 367 + 367 - v4[103]) % 0x16F + v4[104]) % 0x16F + 367 - v4[105]) % 0x16F * v4[106] % 0x16F + 367 - v4[107]) % 0x16F - 367 * (
        (0x5f + ((((v84 % 367 + 367 - v4[103]) % 0x16F + v4[104]) % 0x16F + 367 - v4[105]) % 0x16F * v4[106] % 0x16F + 367 - v4[107]) % 0x16F) // 367)

    v85 = sub_func(v4[108])

    v87 = v4[113] * (((((v4[109] + v86 * v85 % 367) % 367 + 367 - v4[110]) %
                     367 + 367 - v4[111]) % 367 + 367 - v4[112]) % 367)
    v88 = v4[114]
    v89 = sub_func(v4[114])
    v90 = v89 * (v87 % 367)
    v92 = sub_func(v4[115])

    v93 = v90 % 367 * v92
    v94 = v4[117]
    v95 = sub_func(v4[117])

    v97 = (v4[118] + (v4[116] + v93 % 367) % 367 * v95 % 367) % 367
    v98 = sub_func(v4[119])

    v100 = v97 * v98 % 367
    v101 = sub_func(v4[120])

    v102 = v4[122]
    v103 = (v100 * v101 % 367 + 367 - v4[121]) % 367
    v104 = sub_func(v4[122])

    v105 = (v4[124] * ((v4[123] + v103 * v104 % 367) % 367) %
            367 + 367 - v4[125]) % 367 * v4[126]

    v107 = sub_func(v4[127])
    res = ((v105 % 367 * v107 % 367 + 0x5f) % 367)
    return res


import string
enc = [185, 180, 193, 107, 325, 148, 254, 342, 56, 160, 338, 143, 58, 289, 362,
       248, 319, 339, 92, 66, 248, 72, 21, 229, 122, 206, 101, 235, 113, 100, 45, 262]

ascii = string.printable
flag = ''
for i in range(32):
    for c in ascii:
        if func(ord(c),i) == enc[i]:
            flag+= c

print(flag)

